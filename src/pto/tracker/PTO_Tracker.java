/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pto.tracker;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.*;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author Jason.Eichman
 */

public class PTO_Tracker extends javax.swing.JFrame {
        String userName = System.getProperty("user.name");
        ArrayList<String> transArr = new ArrayList<String>();
        Scanner inFile;
        long ptoDays = 0;
        long ptoHours = 0;
        long ptoHoursTaken = 0;
        long totHoursTaken = 0;
        long remainingPTO = 0;

    /**
     * Creates new form PTO_Tacker
     */
    public PTO_Tracker() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTotPTO = new javax.swing.JLabel();
        lblShowTotPTO = new javax.swing.JLabel();
        lblRemainPTO = new javax.swing.JLabel();
        lblShowRemainPTO = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        lblShowTotPTOHour = new javax.swing.JLabel();
        lblShowRemainPTOHour = new javax.swing.JLabel();
        lblUsedPTO = new javax.swing.JLabel();
        lblShowUsedPTO = new javax.swing.JLabel();
        lblShowUsedPTOHour = new javax.swing.JLabel();
        lblYearsOfService = new javax.swing.JLabel();
        lblPTOTaken = new javax.swing.JLabel();
        lblPTODays = new javax.swing.JLabel();
        lblPTOHours = new javax.swing.JLabel();
        lblDateTaken = new javax.swing.JLabel();
        rdbtn0To5 = new javax.swing.JRadioButton();
        rdbtn6To9 = new javax.swing.JRadioButton();
        rdbtn10To19 = new javax.swing.JRadioButton();
        rdbtn20Plus = new javax.swing.JRadioButton();
        cmbbxMonth = new javax.swing.JComboBox<>();
        cmbbxDay = new javax.swing.JComboBox<>();
        btnStatus = new javax.swing.JButton();
        btnEditWindow = new javax.swing.JButton();
        cmbbxHourTaken = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("2018 PTO Tracker");

        lblTotPTO.setText("Total PTO:  ");

        lblShowTotPTO.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblRemainPTO.setText("Remaining PTO:  ");

        lblShowRemainPTO.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblShowTotPTOHour.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblShowRemainPTOHour.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblUsedPTO.setText("PTO Used:  ");

        lblShowUsedPTO.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblShowUsedPTOHour.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblYearsOfService.setText("Years of Service");

        lblPTOTaken.setText("PTO Taken in Hours");

        lblPTODays.setText("PTO in Days");

        lblPTOHours.setText("PTO in Hours");

        lblDateTaken.setText("Date PTO Taken");

        rdbtn0To5.setSelected(true);
        rdbtn0To5.setText("0-5");
        rdbtn0To5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtn0To5ActionPerformed(evt);
            }
        });

        rdbtn6To9.setText("6-9");
        rdbtn6To9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtn6To9ActionPerformed(evt);
            }
        });

        rdbtn10To19.setText("10-19");
        rdbtn10To19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtn10To19ActionPerformed(evt);
            }
        });

        rdbtn20Plus.setText("20+");
        rdbtn20Plus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtn20PlusActionPerformed(evt);
            }
        });

        cmbbxMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        cmbbxMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbbxMonthActionPerformed(evt);
            }
        });

        cmbbxDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        btnStatus.setText("See Status");
        btnStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStatusActionPerformed(evt);
            }
        });

        btnEditWindow.setText("PTO Details");
        btnEditWindow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditWindowActionPerformed(evt);
            }
        });

        cmbbxHourTaken.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2", "4", "6", "8" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnEditWindow)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnStatus))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPTOTaken)
                            .addComponent(lblDateTaken, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cmbbxMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmbbxDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cmbbxHourTaken, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblYearsOfService, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdbtn0To5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdbtn6To9)
                        .addGap(2, 2, 2)
                        .addComponent(rdbtn10To19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdbtn20Plus))
                    .addComponent(lblTotPTO)
                    .addComponent(lblUsedPTO)
                    .addComponent(lblRemainPTO)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblShowUsedPTO, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblShowUsedPTOHour, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPTODays)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblPTOHours))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblShowRemainPTO, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblShowRemainPTOHour, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblShowTotPTO, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblShowTotPTOHour, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(99, 99, 99))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblYearsOfService, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdbtn0To5)
                    .addComponent(rdbtn6To9)
                    .addComponent(rdbtn10To19)
                    .addComponent(rdbtn20Plus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDateTaken, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbbxMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbbxDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 10, Short.MAX_VALUE)
                        .addComponent(lblPTOTaken, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmbbxHourTaken, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPTODays, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPTOHours, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblShowTotPTO, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblShowTotPTOHour, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTotPTO, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUsedPTO, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblShowUsedPTO, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblShowUsedPTOHour, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRemainPTO, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblShowRemainPTO, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblShowRemainPTOHour, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnStatus)
                    .addComponent(btnEditWindow))
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        transArr.clear();
        ptoDays = 0;
        ptoHours = 0;
        ptoHoursTaken = 0;
        totHoursTaken = 0;
        remainingPTO = 0;
        String dateTaken = "";
        
        dateTaken = String.valueOf(cmbbxMonth.getSelectedIndex() + 1) + (String) cmbbxDay.getSelectedItem();
        
        if (Double.valueOf((String)cmbbxHourTaken.getSelectedItem()) > 0 && 
                Double.valueOf((String)cmbbxHourTaken.getSelectedItem()) < 999) {
            ptoHoursTaken = Long.valueOf((String)cmbbxHourTaken.getSelectedItem());
        }
        
        /*
        The following code sets the max allowed PTO based on years of service 
        for use in calculating remaining PTO.
        */
        if (rdbtn0To5.isSelected()){
            ptoDays = 24;
        } 
        else if (rdbtn6To9.isSelected()) {
            ptoDays = 27;
        }
        else if (rdbtn10To19.isSelected())  {
            ptoDays = 30;
        }
        else ptoDays = 33;
        
        ptoHours = ptoDays * 8;
        lblShowTotPTO.setText(String.valueOf(ptoDays));
        lblShowTotPTOHour.setText(String.valueOf(ptoHours));
        
        try {
            
            File dir = new File("C:/Users/" + userName + "/Documents/PTO Tracker");
            if (!dir.exists()){
                dir.mkdir();
            }
            File outTest = new File("C:/Users/" + userName + "/Documents/PTO Tracker/PTO2018.txt");
            if (outTest.exists()){  //If the file exists this will pull PTO taken data into an tranArr.
                inFile = new Scanner(outTest);
                while(inFile.hasNext()){
                    transArr.add(inFile.next());
                }
            }            
            transArr.add(String.valueOf(ptoHoursTaken));
            transArr.add(String.valueOf(dateTaken));
            
            sortDate();

            FileWriter outFile = new FileWriter(outTest);
            
            for (String out : transArr) {
		outFile.write(out + "\r\n");	//Writes the PTO taken to the txt file
            }
            outFile.close();
        } catch (IOException e1) {
            e1.printStackTrace();
	}
        
        for (int i = 0; i < transArr.size(); i = i+2){
            totHoursTaken = Long.valueOf(transArr.get(i)) + totHoursTaken;
        }
        
        remainingPTO = ptoHours - totHoursTaken; 
        lblShowUsedPTO.setText(String.valueOf(Double.valueOf(String.valueOf(totHoursTaken))/ 8));
        lblShowUsedPTOHour.setText(String.valueOf(totHoursTaken));
        lblShowRemainPTO.setText(String.valueOf(Double.valueOf(String.valueOf(remainingPTO))/ 8));
        lblShowRemainPTOHour.setText(String.valueOf(remainingPTO));
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void rdbtn6To9ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        rdbtn0To5.setSelected(false);
        rdbtn10To19.setSelected(false);
        rdbtn20Plus.setSelected(false);
    }   
    
    private void rdbtn10To19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtn10To19ActionPerformed
        rdbtn0To5.setSelected(false);
        rdbtn6To9.setSelected(false);
        rdbtn20Plus.setSelected(false);
    }//GEN-LAST:event_rdbtn10To19ActionPerformed

    private void rdbtn20PlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtn20PlusActionPerformed
        rdbtn0To5.setSelected(false);
        rdbtn6To9.setSelected(false);
        rdbtn10To19.setSelected(false);
    }//GEN-LAST:event_rdbtn20PlusActionPerformed

    private void rdbtn0To5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtn0To5ActionPerformed
        rdbtn6To9.setSelected(false);
        rdbtn10To19.setSelected(false);
        rdbtn20Plus.setSelected(false);
    }//GEN-LAST:event_rdbtn0To5ActionPerformed

    private void cmbbxMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbbxMonthActionPerformed
        String month = (String) cmbbxMonth.getSelectedItem();
        switch (month) {
            case "January":  is31(true);
                     break;
            case "February":  is31(false);
                     break;
            case "March":  is31(true);
                     break;
            case "April":  is31(false);
                     break;
            case "May":  is31(true);
                     break;
            case "June":  is31(false);
                     break;
            case "July":  is31(true);
                     break;
            case "August":  is31(true);
                     break;
            case "September":  is31(false);
                     break;
            case "October": is31(true);
                     break;
            case "November": is31(false);
                     break;
            case "December": is31(true);
                     break;
        }
    }//GEN-LAST:event_cmbbxMonthActionPerformed

    private void btnStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStatusActionPerformed
        transArr.clear();
        ptoDays = 0;
        ptoHours = 0;
        totHoursTaken = 0;
        remainingPTO = 0;
        
        if (rdbtn0To5.isSelected()){
            ptoDays = 24;
        } 
        else if (rdbtn6To9.isSelected()) {
            ptoDays = 27;
        }
        else if (rdbtn10To19.isSelected())  {
            ptoDays = 30;
        }
        else ptoDays = 33;
        
        ptoHours = ptoDays * 8;
        lblShowTotPTO.setText(String.valueOf(ptoDays));
        lblShowTotPTOHour.setText(String.valueOf(ptoHours));
        
        try {
            File outTest = new File("C:/Users/" + userName + "/Documents/PTO Tracker/PTO2018.txt");

            if (outTest.exists()){  //If the file exists this will pull PTO taken data into an tranArr.
                inFile = new Scanner(outTest);
                while(inFile.hasNext()){
                    transArr.add(inFile.next());
                }
            }
            
        } catch (IOException e1) {
            e1.printStackTrace();
	}
        
        for (int i = 0; i < transArr.size(); i = i+2){
            totHoursTaken = Long.valueOf(transArr.get(i)) + totHoursTaken;
        }
        
        remainingPTO = ptoHours - totHoursTaken;      
        lblShowUsedPTO.setText(String.valueOf(Double.valueOf(String.valueOf(totHoursTaken))/ 8));
        lblShowUsedPTOHour.setText(String.valueOf(totHoursTaken));
        lblShowRemainPTO.setText(String.valueOf(Double.valueOf(String.valueOf(remainingPTO))/ 8));
        lblShowRemainPTOHour.setText(String.valueOf(remainingPTO));
    }//GEN-LAST:event_btnStatusActionPerformed

    private void btnEditWindowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditWindowActionPerformed
        new editPTO().setVisible(true);
    }//GEN-LAST:event_btnEditWindowActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PTO_Tracker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PTO_Tracker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PTO_Tracker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PTO_Tracker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PTO_Tracker().setVisible(true);
            }
        });
    }
    
    private void is31(boolean thirtyOne) {
        if (thirtyOne){
            cmbbxDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", 
                "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", 
                "24", "25", "26", "27", "28", "29", "30", "31"}));
        }
        else{
            if (cmbbxMonth.getSelectedItem().equals("February")){
                cmbbxDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", 
                "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", 
                "24", "25", "26", "27", "28"}));
            }
            else {
                cmbbxDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", 
                "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", 
                "24", "25", "26", "27", "28", "29", "30"}));
            }
        }
    }
    
            
    public void sortDate() {
        long[] copy = new long[transArr.size()];
        
        for (int i = 0; i < copy.length; i++){
            copy[i] = Long.valueOf(transArr.get(i));
        }
        for (int i = 1; i < copy.length; i=i+2) {
            for (int j = i + 2; j < copy.length; j=j+2) {
                long tmp;
                long tmp1;
                if (copy[i] > copy[j]) {
                    tmp = copy[i];
                    tmp1 = copy[i-1];
                    copy[i] = copy[j];
                    copy[i-1] = copy[j-1];
                    copy[j] = tmp;
                    copy[j-1] = tmp1;
                }
            }
        }
        transArr.clear();
        for (int i = 0; i < copy.length; i++){
            String temp = String.valueOf(copy[i]);
            transArr.add(temp);
        }
        
    }    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditWindow;
    private javax.swing.JButton btnStatus;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbbxDay;
    private javax.swing.JComboBox<String> cmbbxHourTaken;
    private javax.swing.JComboBox<String> cmbbxMonth;
    private javax.swing.JLabel lblDateTaken;
    private javax.swing.JLabel lblPTODays;
    private javax.swing.JLabel lblPTOHours;
    private javax.swing.JLabel lblPTOTaken;
    private javax.swing.JLabel lblRemainPTO;
    private javax.swing.JLabel lblShowRemainPTO;
    private javax.swing.JLabel lblShowRemainPTOHour;
    private javax.swing.JLabel lblShowTotPTO;
    private javax.swing.JLabel lblShowTotPTOHour;
    private javax.swing.JLabel lblShowUsedPTO;
    private javax.swing.JLabel lblShowUsedPTOHour;
    private javax.swing.JLabel lblTotPTO;
    private javax.swing.JLabel lblUsedPTO;
    private javax.swing.JLabel lblYearsOfService;
    private javax.swing.JRadioButton rdbtn0To5;
    private javax.swing.JRadioButton rdbtn10To19;
    private javax.swing.JRadioButton rdbtn20Plus;
    private javax.swing.JRadioButton rdbtn6To9;
    // End of variables declaration//GEN-END:variables
}
